{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport axiosRetry from \"axios-retry\";\n\n// context\nimport { FlashContext } from \"../components/context/FlashContext\";\nexport default function useAxiosInstance() {\n  _s();\n  const {\n    pushFlashMessage\n  } = useContext(FlashContext);\n  const navigate = useNavigate();\n\n  // axios instance config\n  const instanceConfig = {\n    baseURL: `${window.location.protocol}//${window.location.hostname}:${PORT}`,\n    // ! temporary\n    withCredentials: true\n  };\n\n  // axios request config\n  const headerConfig = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n  const timeout = {\n    timeout: 10000\n  };\n\n  // axios abort controllers\n  const fetchController = new AbortController();\n  const deleteChannelController = new AbortController();\n  const editChannelController = new AbortController();\n  const newChannelController = new AbortController();\n  const leaveGroupController = new AbortController();\n  const deleteGroupController = new AbortController();\n  const signUserController = new AbortController();\n  const newGroupController = new AbortController();\n  const editGroupController = new AbortController();\n  const joinGroupController = new AbortController();\n  const logOutController = new AbortController();\n  const deleteUserController = new AbortController();\n  const editUserController = new AbortController();\n\n  // retry config\n  const infiniteRetry = {\n    retries: Infinity,\n    // number of retries\n    retryDelay: () => 5000 // accepts a function, has retryCount passed to it, must return a number\n  };\n\n  const threeRetries = {\n    retries: 3,\n    // number of retries\n    retryDelay: () => 5000 // accepts a function, has retryCount passed to it, must return a number\n  };\n\n  // retry conditions\n  function handleErrors(err) {\n    // console.log(err);\n    // if (err.response.data.messages) {\n    //   console.log(\"flash handler\");\n    //   pushFlashMessage(err.response.data.messages);\n    // } // flash handler\n    if (err.code === \"ECONNABORTED\") {\n      handleIfTimedOut(err); // todo handle timeouts\n    } else toLoginOnUnauthorized(err);\n  }\n  function toLoginOnUnauthorized(err) {\n    // if retry condition is not specified, by default idempotent requests are retried\n    const noRetryCodes = [400, 403, 404, 406, 500];\n    if (err.response.status === 401) navigate(\"/login\");else if (noRetryCodes.includes(err.response.status)) return false;else return true;\n  }\n  function handleIfTimedOut(err) {\n    pushFlashMessage([{\n      message: \"Request timed out\",\n      type: \"error\"\n    }]);\n    return false;\n  }\n\n  // axios instances\n  function fetchGroups() {\n    const fetchGroupsInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig\n    };\n    config.signal = fetchController.signal;\n    axiosRetry(fetchGroupsInstance, {\n      ...infiniteRetry,\n      retryCondition: err => handleErrors(err)\n    });\n    return fetchGroupsInstance.get(\"/g\", config);\n  }\n  function deleteChannel(idString) {\n    const deleteChannelInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = deleteChannelController.signal;\n    axiosRetry(deleteChannelInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return deleteChannelInstance.delete(`/c/${idString}`, config);\n  }\n  function editChannel(idString, data) {\n    const editChannelInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = editChannelController.signal;\n    axiosRetry(editChannelInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return editChannelInstance.patch(`/c/${idString}`, data, config);\n  }\n  function newChannel(data) {\n    const newChannelInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = newChannelController.signal;\n    axiosRetry(newChannelInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return newChannelInstance.post(\"/c\", data, config);\n  }\n  function leaveGroup(idString) {\n    const leaveGroupInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = leaveGroupController.signal;\n    axiosRetry(leaveGroupInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return leaveGroupInstance.patch(`/g/${idString}`, config);\n  }\n  function deleteGroup(idString) {\n    const deleteGroupInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = leaveGroupController.signal;\n    axiosRetry(deleteGroupInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return deleteGroupInstance.delete(`/g/${idString}`, config);\n  }\n  function signUser(route, data) {\n    const userSignInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = signUserController.signal;\n    axiosRetry(userSignInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return userSignInstance.post(route, data, config);\n  }\n  function newGroup(data) {\n    const newGroupInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = signUserController.signal;\n    axiosRetry(newGroupInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return newGroupInstance.post(\"/g\", data, config);\n  }\n  function editGroup(idString, data) {\n    const editGroupInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = editChannelController.signal;\n    axiosRetry(editGroupInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return editGroupInstance.put(`/g/${idString}`, data, config);\n  }\n  function joinGroup(code) {\n    const joinGroupInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = joinGroupController.signal;\n    axiosRetry(joinGroupInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return joinGroupInstance.post(code, config);\n  }\n  function logOut() {\n    const logOutInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = logOutController.signal;\n    axiosRetry(logOutInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return logOutInstance.delete(\"/u\", config);\n  }\n  function deleteUser(userId, data) {\n    const deleteUserInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = deleteUserController.signal;\n    axiosRetry(deleteUserInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return deleteUserInstance.put(`/u/${userId}`, data, config);\n  }\n  function editUser(userId, data) {\n    const editUserInstance = axios.create(instanceConfig);\n    const config = {\n      ...headerConfig,\n      ...timeout\n    };\n    config.signal = editUserController.signal;\n    axiosRetry(editUserInstance, {\n      ...threeRetries,\n      retryCondition: err => handleErrors(err)\n    });\n    return editUserInstance.patch(`/u/${userId}`, data, config);\n  }\n\n  // axios abort calls\n  function abortFetch() {\n    fetchController.abort();\n  }\n  function abortChannelDelete() {\n    deleteChannelController.abort();\n  }\n  function abortChannelEdit() {\n    deleteChannelController.abort();\n  }\n  function abortChannelCreate() {\n    newChannelController.abort();\n  }\n  function abortGroupLeave() {\n    leaveGroupController.abort();\n  }\n  function abortGroupDelete() {\n    deleteGroupController.abort();\n  }\n  function abortUserSign() {\n    signUserController.abort();\n  }\n  function abortGroupCreate() {\n    newGroupController.abort();\n  }\n  function abortGroupEdit() {\n    editGroupController.abort();\n  }\n  function abortGroupJoin() {\n    joinGroupController.abort();\n  }\n  function abortLogOut() {\n    joinGroupController.abort();\n  }\n  function abortDeleteUser() {\n    deleteUserController.abort();\n  }\n  function abortEditUser() {\n    editUserController.abort();\n  }\n  // todo: set aborts\n  function abortAll() {\n    fetchController.abort();\n    deleteChannelController.abort();\n    deleteChannelController.abort();\n    newChannelController.abort();\n    leaveGroupController.abort();\n    deleteGroupController.abort();\n    signUserController.abort();\n    newGroupController.abort();\n    editGroupController.abort();\n    joinGroupController.abort();\n    joinGroupController.abort();\n    deleteUserController.abort();\n    editUserController.abort();\n  }\n  return {\n    userAccount: {\n      sign: signUser,\n      edit: editUser,\n      delete: deleteUser,\n      logOut,\n      abortSign: abortUserSign,\n      abortEdit: abortEditUser,\n      abortDelete: abortDeleteUser,\n      abortLogOut\n    },\n    userGroups: {\n      fetch: fetchGroups,\n      new: newGroup,\n      edit: editGroup,\n      join: joinGroup,\n      leave: leaveGroup,\n      delete: deleteGroup,\n      abortFetch,\n      abortNew: abortGroupCreate,\n      abortEdit: abortGroupEdit,\n      abortJoin: abortGroupJoin,\n      abortLeave: abortGroupLeave,\n      abortDelete: abortGroupDelete\n    },\n    userChannels: {\n      new: newChannel,\n      edit: editChannel,\n      delete: deleteChannel,\n      abortNew: abortChannelCreate,\n      abortEdit: abortChannelEdit,\n      abortDelete: abortChannelDelete\n    },\n    abortAll\n  };\n}\n_s(useAxiosInstance, \"XxA8i1zBTmn364OhUioVD+tXWOo=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useContext","useNavigate","axios","axiosRetry","FlashContext","useAxiosInstance","pushFlashMessage","navigate","instanceConfig","baseURL","window","location","protocol","hostname","PORT","withCredentials","headerConfig","headers","timeout","fetchController","AbortController","deleteChannelController","editChannelController","newChannelController","leaveGroupController","deleteGroupController","signUserController","newGroupController","editGroupController","joinGroupController","logOutController","deleteUserController","editUserController","infiniteRetry","retries","Infinity","retryDelay","threeRetries","handleErrors","err","code","handleIfTimedOut","toLoginOnUnauthorized","noRetryCodes","response","status","includes","message","type","fetchGroups","fetchGroupsInstance","create","config","signal","retryCondition","get","deleteChannel","idString","deleteChannelInstance","delete","editChannel","data","editChannelInstance","patch","newChannel","newChannelInstance","post","leaveGroup","leaveGroupInstance","deleteGroup","deleteGroupInstance","signUser","route","userSignInstance","newGroup","newGroupInstance","editGroup","editGroupInstance","put","joinGroup","joinGroupInstance","logOut","logOutInstance","deleteUser","userId","deleteUserInstance","editUser","editUserInstance","abortFetch","abort","abortChannelDelete","abortChannelEdit","abortChannelCreate","abortGroupLeave","abortGroupDelete","abortUserSign","abortGroupCreate","abortGroupEdit","abortGroupJoin","abortLogOut","abortDeleteUser","abortEditUser","abortAll","userAccount","sign","edit","abortSign","abortEdit","abortDelete","userGroups","fetch","new","join","leave","abortNew","abortJoin","abortLeave","userChannels"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/utils/axios.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport axiosRetry from \"axios-retry\";\n\n// context\nimport { FlashContext } from \"../components/context/FlashContext\";\n\nexport default function useAxiosInstance() {\n  const { pushFlashMessage } = useContext(FlashContext);\n  const navigate = useNavigate();\n\n  // axios instance config\n  const instanceConfig = {\n    baseURL: `${window.location.protocol}//${window.location.hostname}:${PORT}`, // ! temporary\n    withCredentials: true,\n  };\n\n  // axios request config\n  const headerConfig = {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  };\n  const timeout = { timeout: 10000 };\n\n  // axios abort controllers\n  const fetchController = new AbortController();\n  const deleteChannelController = new AbortController();\n  const editChannelController = new AbortController();\n  const newChannelController = new AbortController();\n  const leaveGroupController = new AbortController();\n  const deleteGroupController = new AbortController();\n  const signUserController = new AbortController();\n  const newGroupController = new AbortController();\n  const editGroupController = new AbortController();\n  const joinGroupController = new AbortController();\n  const logOutController = new AbortController();\n  const deleteUserController = new AbortController();\n  const editUserController = new AbortController();\n\n  // retry config\n  const infiniteRetry = {\n    retries: Infinity, // number of retries\n    retryDelay: () => 5000, // accepts a function, has retryCount passed to it, must return a number\n  };\n  const threeRetries = {\n    retries: 3, // number of retries\n    retryDelay: () => 5000, // accepts a function, has retryCount passed to it, must return a number\n  };\n\n  // retry conditions\n  function handleErrors(err) {\n    // console.log(err);\n    // if (err.response.data.messages) {\n    //   console.log(\"flash handler\");\n    //   pushFlashMessage(err.response.data.messages);\n    // } // flash handler\n    if (err.code === \"ECONNABORTED\") {\n      handleIfTimedOut(err); // todo handle timeouts\n    } else toLoginOnUnauthorized(err);\n  }\n  function toLoginOnUnauthorized(err) {\n    // if retry condition is not specified, by default idempotent requests are retried\n    const noRetryCodes = [400, 403, 404, 406, 500];\n\n    if (err.response.status === 401) navigate(\"/login\");\n    else if (noRetryCodes.includes(err.response.status)) return false;\n    else return true;\n  }\n  function handleIfTimedOut(err) {\n    pushFlashMessage([{ message: \"Request timed out\", type: \"error\" }]);\n    return false;\n  }\n\n  // axios instances\n  function fetchGroups() {\n    const fetchGroupsInstance = axios.create(instanceConfig);\n\n    const config = { ...headerConfig };\n    config.signal = fetchController.signal;\n\n    axiosRetry(fetchGroupsInstance, {\n      ...infiniteRetry,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return fetchGroupsInstance.get(\"/g\", config);\n  }\n\n  function deleteChannel(idString) {\n    const deleteChannelInstance = axios.create(instanceConfig);\n\n    const config = { ...headerConfig, ...timeout };\n    config.signal = deleteChannelController.signal;\n\n    axiosRetry(deleteChannelInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return deleteChannelInstance.delete(`/c/${idString}`, config);\n  }\n\n  function editChannel(idString, data) {\n    const editChannelInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = editChannelController.signal;\n\n    axiosRetry(editChannelInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return editChannelInstance.patch(`/c/${idString}`, data, config);\n  }\n\n  function newChannel(data) {\n    const newChannelInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = newChannelController.signal;\n\n    axiosRetry(newChannelInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return newChannelInstance.post(\"/c\", data, config);\n  }\n\n  function leaveGroup(idString) {\n    const leaveGroupInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = leaveGroupController.signal;\n\n    axiosRetry(leaveGroupInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return leaveGroupInstance.patch(`/g/${idString}`, config);\n  }\n\n  function deleteGroup(idString) {\n    const deleteGroupInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = leaveGroupController.signal;\n\n    axiosRetry(deleteGroupInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return deleteGroupInstance.delete(`/g/${idString}`, config);\n  }\n\n  function signUser(route, data) {\n    const userSignInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = signUserController.signal;\n\n    axiosRetry(userSignInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return userSignInstance.post(route, data, config);\n  }\n\n  function newGroup(data) {\n    const newGroupInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = signUserController.signal;\n\n    axiosRetry(newGroupInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return newGroupInstance.post(\"/g\", data, config);\n  }\n\n  function editGroup(idString, data) {\n    const editGroupInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = editChannelController.signal;\n\n    axiosRetry(editGroupInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return editGroupInstance.put(`/g/${idString}`, data, config);\n  }\n\n  function joinGroup(code) {\n    const joinGroupInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = joinGroupController.signal;\n\n    axiosRetry(joinGroupInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return joinGroupInstance.post(code, config);\n  }\n\n  function logOut() {\n    const logOutInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = logOutController.signal;\n\n    axiosRetry(logOutInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return logOutInstance.delete(\"/u\", config);\n  }\n\n  function deleteUser(userId, data) {\n    const deleteUserInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = deleteUserController.signal;\n\n    axiosRetry(deleteUserInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return deleteUserInstance.put(`/u/${userId}`, data, config);\n  }\n\n  function editUser(userId, data) {\n    const editUserInstance = axios.create(instanceConfig);\n    const config = { ...headerConfig, ...timeout };\n    config.signal = editUserController.signal;\n\n    axiosRetry(editUserInstance, {\n      ...threeRetries,\n      retryCondition: (err) => handleErrors(err),\n    });\n\n    return editUserInstance.patch(`/u/${userId}`, data, config);\n  }\n\n  // axios abort calls\n  function abortFetch() {\n    fetchController.abort();\n  }\n  function abortChannelDelete() {\n    deleteChannelController.abort();\n  }\n  function abortChannelEdit() {\n    deleteChannelController.abort();\n  }\n  function abortChannelCreate() {\n    newChannelController.abort();\n  }\n  function abortGroupLeave() {\n    leaveGroupController.abort();\n  }\n  function abortGroupDelete() {\n    deleteGroupController.abort();\n  }\n  function abortUserSign() {\n    signUserController.abort();\n  }\n  function abortGroupCreate() {\n    newGroupController.abort();\n  }\n  function abortGroupEdit() {\n    editGroupController.abort();\n  }\n  function abortGroupJoin() {\n    joinGroupController.abort();\n  }\n  function abortLogOut() {\n    joinGroupController.abort();\n  }\n  function abortDeleteUser() {\n    deleteUserController.abort();\n  }\n  function abortEditUser() {\n    editUserController.abort();\n  }\n  // todo: set aborts\n  function abortAll() {\n    fetchController.abort();\n    deleteChannelController.abort();\n    deleteChannelController.abort();\n    newChannelController.abort();\n    leaveGroupController.abort();\n    deleteGroupController.abort();\n    signUserController.abort();\n    newGroupController.abort();\n    editGroupController.abort();\n    joinGroupController.abort();\n    joinGroupController.abort();\n    deleteUserController.abort();\n    editUserController.abort();\n  }\n\n  return {\n    userAccount: {\n      sign: signUser,\n      edit: editUser,\n      delete: deleteUser,\n      logOut,\n      abortSign: abortUserSign,\n      abortEdit: abortEditUser,\n      abortDelete: abortDeleteUser,\n      abortLogOut,\n    },\n    userGroups: {\n      fetch: fetchGroups,\n      new: newGroup,\n      edit: editGroup,\n      join: joinGroup,\n      leave: leaveGroup,\n      delete: deleteGroup,\n      abortFetch,\n      abortNew: abortGroupCreate,\n      abortEdit: abortGroupEdit,\n      abortJoin: abortGroupJoin,\n      abortLeave: abortGroupLeave,\n      abortDelete: abortGroupDelete,\n    },\n    userChannels: {\n      new: newChannel,\n      edit: editChannel,\n      delete: deleteChannel,\n      abortNew: abortChannelCreate,\n      abortEdit: abortChannelEdit,\n      abortDelete: abortChannelDelete,\n    },\n    abortAll,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}