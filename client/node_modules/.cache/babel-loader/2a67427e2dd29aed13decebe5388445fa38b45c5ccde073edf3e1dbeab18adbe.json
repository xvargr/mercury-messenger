{"ast":null,"code":"import{ChevronDoubleDownIcon}from\"@heroicons/react/solid\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function GoToBottomButton(props){var visible=props.visible,passOnClick=props.passOnClick;return/*#__PURE__*/_jsx(\"button\",{className:\"w-14 h-14 lg:w-16 lg:h-16 bg-gray-500 hover:bg-gray-400 shadow-md \".concat(visible?\"opacity-0 pointer-events-none\":\"opacity-80\"// <= this*\n,\" rounded-full transition-all ease-in-out duration-300 group flex items-center justify-center absolute bottom-20 right-6 md:bottom-24 md:right-14 z-10\"),onClick:function onClick(){return passOnClick();},children:/*#__PURE__*/_jsx(ChevronDoubleDownIcon,{className:\"h-10 lg:h-12 text-gray-700 group-hover:text-gray-600 transition-colors ease-in-out duration-300 group\"})});}// tailwind opacity transition works if this component is in its own file and not nested in other component\n// when classes are applied like this*, it has no transition, as @ condition described above\n// previously was nested in parent component","map":{"version":3,"names":["ChevronDoubleDownIcon","GoToBottomButton","props","visible","passOnClick"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/components/chat/GoToBottomButton.js"],"sourcesContent":["import { ChevronDoubleDownIcon } from \"@heroicons/react/solid\";\n\nexport default function GoToBottomButton(props) {\n  const { visible, passOnClick } = props;\n\n  return (\n    <button\n      className={`w-14 h-14 lg:w-16 lg:h-16 bg-gray-500 hover:bg-gray-400 shadow-md ${\n        visible ? \"opacity-0 pointer-events-none\" : \"opacity-80\" // <= this*\n      } rounded-full transition-all ease-in-out duration-300 group flex items-center justify-center absolute bottom-20 right-6 md:bottom-24 md:right-14 z-10`}\n      onClick={() => passOnClick()}\n    >\n      <ChevronDoubleDownIcon className=\"h-10 lg:h-12 text-gray-700 group-hover:text-gray-600 transition-colors ease-in-out duration-300 group\" />\n    </button>\n  );\n}\n// tailwind opacity transition works if this component is in its own file and not nested in other component\n// when classes are applied like this*, it has no transition, as @ condition described above\n// previously was nested in parent component\n"],"mappings":"AAAA,OAASA,qBAAqB,KAAQ,wBAAwB,CAAC,2CAE/D,cAAe,SAASC,iBAAgB,CAACC,KAAK,CAAE,CAC9C,GAAQC,QAAO,CAAkBD,KAAK,CAA9BC,OAAO,CAAEC,WAAW,CAAKF,KAAK,CAArBE,WAAW,CAE5B,mBACE,eACE,SAAS,6EACPD,OAAO,CAAG,+BAA+B,CAAG,YAAa;AAAA,yJAC6F,CACxJ,OAAO,CAAE,yBAAMC,YAAW,EAAE,EAAC,uBAE7B,KAAC,qBAAqB,EAAC,SAAS,CAAC,uGAAuG,EAAG,EACpI,CAEb,CACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}