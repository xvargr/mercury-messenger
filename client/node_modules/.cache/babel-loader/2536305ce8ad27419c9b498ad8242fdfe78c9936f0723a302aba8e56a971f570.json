{"ast":null,"code":"import{useEffect,useContext}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{DataContext}from\"../components/context/DataContext\";import useLocalFallback from\"./localFallback\";// this hook reads the cached group and channel id from local storage and uses it to \"remember\" the\n// \"browser's\" position and retrieve the relevant data necessary to show the loaded page\n// used primarily on refresh\nexport default function useStateRestore(){var _useContext=useContext(DataContext),groupData=_useContext.groupData,dataMounted=_useContext.dataMounted,chatMounted=_useContext.chatMounted,stateRestored=_useContext.stateRestored,setStateRestored=_useContext.setStateRestored,setSelectedGroup=_useContext.setSelectedGroup,setSelectedChannel=_useContext.setSelectedChannel;var _useParams=useParams(),groupParam=_useParams.group,channelParam=_useParams.channel;var navigate=useNavigate();var _useLocalFallback=useLocalFallback(),retrieveStored=_useLocalFallback.retrieveStored;useEffect(function(){if(dataMounted&&chatMounted&&!stateRestored){// console.log(\"restoringState\");\nvar cachedGroupId=retrieveStored.groupId();var cachedChannelId=retrieveStored.channelId();var cachedGroupName=retrieveStored.groupName();var cachedChannelName=retrieveStored.channelName();// reroute to home is discrepancy exists between current location and backed up location\n// else, restore selected context\n// console.log(cachedChannelId);\n// console.log(cachedGroupId);\nif(groupParam&&cachedGroupId){if(groupParam!==cachedGroupName)navigate(\"/\");var restoredGroup=groupData[cachedGroupId];if(!restoredGroup)navigate(\"/\");setSelectedGroup(restoredGroup);}if(channelParam&&cachedChannelId){if(channelParam!==cachedChannelName)navigate(\"/\");var restoredChannel=groupData[cachedGroupId].channels.text.find(function(channel){return channel._id===cachedChannelId;});if(!restoredChannel)navigate(\"/\");setSelectedChannel(restoredChannel);}setStateRestored(true);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[dataMounted,chatMounted]);}","map":{"version":3,"names":["useEffect","useContext","useParams","useNavigate","DataContext","useLocalFallback","useStateRestore","groupData","dataMounted","chatMounted","stateRestored","setStateRestored","setSelectedGroup","setSelectedChannel","groupParam","group","channelParam","channel","navigate","retrieveStored","cachedGroupId","groupId","cachedChannelId","channelId","cachedGroupName","groupName","cachedChannelName","channelName","restoredGroup","restoredChannel","channels","text","find","_id"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/utils/restoreState.js"],"sourcesContent":["import { useEffect, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport { DataContext } from \"../components/context/DataContext\";\n\nimport useLocalFallback from \"./localFallback\";\n\n// this hook reads the cached group and channel id from local storage and uses it to \"remember\" the\n// \"browser's\" position and retrieve the relevant data necessary to show the loaded page\n// used primarily on refresh\nexport default function useStateRestore() {\n  const {\n    groupData,\n    dataMounted,\n    chatMounted,\n    stateRestored,\n    setStateRestored,\n    setSelectedGroup,\n    setSelectedChannel,\n  } = useContext(DataContext);\n  const { group: groupParam, channel: channelParam } = useParams();\n  const navigate = useNavigate();\n\n  const { retrieveStored } = useLocalFallback();\n\n  useEffect(() => {\n    if (dataMounted && chatMounted && !stateRestored) {\n      // console.log(\"restoringState\");\n      const cachedGroupId = retrieveStored.groupId();\n      const cachedChannelId = retrieveStored.channelId();\n\n      const cachedGroupName = retrieveStored.groupName();\n      const cachedChannelName = retrieveStored.channelName();\n\n      // reroute to home is discrepancy exists between current location and backed up location\n      // else, restore selected context\n      // console.log(cachedChannelId);\n      // console.log(cachedGroupId);\n      if (groupParam && cachedGroupId) {\n        if (groupParam !== cachedGroupName) navigate(\"/\");\n        const restoredGroup = groupData[cachedGroupId];\n        if (!restoredGroup) navigate(\"/\");\n        setSelectedGroup(restoredGroup);\n      }\n\n      if (channelParam && cachedChannelId) {\n        if (channelParam !== cachedChannelName) navigate(\"/\");\n        const restoredChannel = groupData[cachedGroupId].channels.text.find(\n          (channel) => channel._id === cachedChannelId\n        );\n        if (!restoredChannel) navigate(\"/\");\n        setSelectedChannel(restoredChannel);\n      }\n\n      setStateRestored(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dataMounted, chatMounted]);\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7C,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CAEzD,OAASC,WAAW,KAAQ,mCAAmC,CAE/D,MAAOC,iBAAgB,KAAM,iBAAiB,CAE9C;AACA;AACA;AACA,cAAe,SAASC,gBAAe,EAAG,CACxC,gBAQIL,UAAU,CAACG,WAAW,CAAC,CAPzBG,SAAS,aAATA,SAAS,CACTC,WAAW,aAAXA,WAAW,CACXC,WAAW,aAAXA,WAAW,CACXC,aAAa,aAAbA,aAAa,CACbC,gBAAgB,aAAhBA,gBAAgB,CAChBC,gBAAgB,aAAhBA,gBAAgB,CAChBC,kBAAkB,aAAlBA,kBAAkB,CAEpB,eAAqDX,SAAS,EAAE,CAAjDY,UAAU,YAAjBC,KAAK,CAAuBC,YAAY,YAArBC,OAAO,CAClC,GAAMC,SAAQ,CAAGf,WAAW,EAAE,CAE9B,sBAA2BE,gBAAgB,EAAE,CAArCc,cAAc,mBAAdA,cAAc,CAEtBnB,SAAS,CAAC,UAAM,CACd,GAAIQ,WAAW,EAAIC,WAAW,EAAI,CAACC,aAAa,CAAE,CAChD;AACA,GAAMU,cAAa,CAAGD,cAAc,CAACE,OAAO,EAAE,CAC9C,GAAMC,gBAAe,CAAGH,cAAc,CAACI,SAAS,EAAE,CAElD,GAAMC,gBAAe,CAAGL,cAAc,CAACM,SAAS,EAAE,CAClD,GAAMC,kBAAiB,CAAGP,cAAc,CAACQ,WAAW,EAAE,CAEtD;AACA;AACA;AACA;AACA,GAAIb,UAAU,EAAIM,aAAa,CAAE,CAC/B,GAAIN,UAAU,GAAKU,eAAe,CAAEN,QAAQ,CAAC,GAAG,CAAC,CACjD,GAAMU,cAAa,CAAGrB,SAAS,CAACa,aAAa,CAAC,CAC9C,GAAI,CAACQ,aAAa,CAAEV,QAAQ,CAAC,GAAG,CAAC,CACjCN,gBAAgB,CAACgB,aAAa,CAAC,CACjC,CAEA,GAAIZ,YAAY,EAAIM,eAAe,CAAE,CACnC,GAAIN,YAAY,GAAKU,iBAAiB,CAAER,QAAQ,CAAC,GAAG,CAAC,CACrD,GAAMW,gBAAe,CAAGtB,SAAS,CAACa,aAAa,CAAC,CAACU,QAAQ,CAACC,IAAI,CAACC,IAAI,CACjE,SAACf,OAAO,QAAKA,QAAO,CAACgB,GAAG,GAAKX,eAAe,GAC7C,CACD,GAAI,CAACO,eAAe,CAAEX,QAAQ,CAAC,GAAG,CAAC,CACnCL,kBAAkB,CAACgB,eAAe,CAAC,CACrC,CAEAlB,gBAAgB,CAAC,IAAI,CAAC,CACxB,CACA;AACF,CAAC,CAAE,CAACH,WAAW,CAAEC,WAAW,CAAC,CAAC,CAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}