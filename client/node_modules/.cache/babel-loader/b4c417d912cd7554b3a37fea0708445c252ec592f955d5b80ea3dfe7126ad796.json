{"ast":null,"code":"import _toConsumableArray from\"/home/agreus/Documents/webdev/mercury-messenger/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/agreus/Documents/webdev/mercury-messenger/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/agreus/Documents/webdev/mercury-messenger/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,createContext,useEffect,useRef}from\"react\";// utility hooks\nimport useLocalFallback from\"../../utils/localFallback\";import{jsx as _jsx}from\"react/jsx-runtime\";export var DataContext=/*#__PURE__*/createContext();// use this to access the values here\n// use this to wrap around components that needs to access the values here\nexport function DataStateProvider(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),groupData=_useState2[0],setGroupData=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),peerData=_useState4[0],setPeerData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),dataMounted=_useState6[0],setDataMounted=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),chatMounted=_useState8[0],setChatMounted=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),selectedGroup=_useState10[0],setSelectedGroup=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),selectedChannel=_useState12[0],setSelectedChannel=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),selectedChatIsDepleted=_useState14[0],setSelectedChatIsDepleted=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),stateRestored=_useState16[0],setStateRestored=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),dataReady=_useState18[0],setDataReady=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isLoggedIn=_useState20[0],setIsLoggedIn=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),windowIsFocused=_useState22[0],setWindowIsFocused=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),statusForced=_useState24[0],setStatusForced=_useState24[1];var _useState25=useState({}),_useState26=_slicedToArray(_useState25,2),unreadState=_useState26[0],setUnreadState=_useState26[1];var _useState27=useState(null),_useState28=_slicedToArray(_useState27,2),socketError=_useState28[0],setSocketError=_useState28[1];var _useLocalFallback=useLocalFallback(),updateStored=_useLocalFallback.updateStored;// this ref is used to prevent stale closure in the helper functions below\nvar groupDataRef=useRef(groupData);useEffect(function(){groupDataRef.current=groupData;},[groupData]);// backup selected context id on change\n// clear unread on enter chat\nuseEffect(function(){if(selectedGroup)updateStored.group(selectedGroup);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[selectedGroup]);useEffect(function(){if(selectedChannel){setUnread({channelId:selectedChannel._id,clear:true});updateStored.channel(selectedChannel);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[selectedChannel]);// chatDepleted status updater\nuseEffect(function(){if(!selectedGroup||!selectedChannel||!dataReady)setSelectedChatIsDepleted(false);else if(groupData[selectedGroup]!==selectedGroup){var _groupData$selectedGr,_groupData$selectedGr2;var isDepleted;// ! unstable\nif(((_groupData$selectedGr=groupData[selectedGroup._id].chatData[selectedChannel._id])===null||_groupData$selectedGr===void 0?void 0:_groupData$selectedGr.length)<20||(_groupData$selectedGr2=groupData[selectedGroup._id].chatDepleted)!==null&&_groupData$selectedGr2!==void 0&&_groupData$selectedGr2[selectedChannel._id]){isDepleted=true;}else{isDepleted=false;}setSelectedChatIsDepleted(isDepleted);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[selectedChannel,groupData,dataReady]);// todo change selected context if main grpData changes\n// window is focused detection used for notification sounds\nuseEffect(function(){window.addEventListener(\"focus\",function(){return setWindowIsFocused(true);});window.addEventListener(\"blur\",function(){return setWindowIsFocused(false);});return function(){window.addEventListener(\"focus\",function(){return setWindowIsFocused(true);});window.addEventListener(\"blur\",function(){return setWindowIsFocused(false);});};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// set if everything is ready to show\nuseEffect(function(){if(dataMounted&&chatMounted&&stateRestored)setDataReady(true);else setDataReady(false);},[dataMounted,chatMounted,stateRestored]);function getUnread(params){var groupId=params.groupId,channelId=params.channelId;var unreadCount;if(!groupId&&!channelId){console.warn(\"invalid params\");return null;}if(channelId){unreadCount=unreadState[channelId];}else if(groupId){var channels=groupData[groupId].channels.text;unreadCount=channels.reduce(function(accumulator,channel){var _unreadState$channel$;return accumulator+((_unreadState$channel$=unreadState[channel._id])!==null&&_unreadState$channel$!==void 0?_unreadState$channel$:0);},0);}return unreadCount>0?unreadCount:0;}function setUnread(params){var channelId=params.channelId,add=params.add,clear=params.clear;setUnreadState(function(prevState){var stateCopy=_objectSpread({},prevState);if(add){stateCopy[channelId]=(stateCopy===null||stateCopy===void 0?void 0:stateCopy[channelId])>0?stateCopy[channelId]+1:1;}else if(clear)delete stateCopy[channelId];return stateCopy;});}function isAdmin(){return selectedGroup===null||selectedGroup===void 0?void 0:selectedGroup.administrators.some(function(admin){return admin._id===localStorage.userId;});}function clearSelected(){setSelectedChannel(null);setSelectedGroup(null);}function mountChat(chatObject,depletedObject){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);for(var groupId in chatObject){dataCopy[groupId].chatData=_objectSpread({},chatObject[groupId]);}for(var _groupId in depletedObject){dataCopy[_groupId].chatDepleted=_objectSpread({},depletedObject[_groupId]);}return dataCopy;});setChatMounted(true);}function getChannelIndex(parentId,channelId){var _groupDataRef$current;var dataArray=(_groupDataRef$current=groupDataRef.current)!==null&&_groupDataRef$current!==void 0?_groupDataRef$current:groupData;var result=dataArray[parentId].channels.text.findIndex(function(channel){return channel._id===channelId;});return result;}function addNewChat(groupIdString,channelIdString,chatData){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);dataCopy[groupIdString].chatData[channelIdString]=chatData?chatData[groupIdString][channelIdString]:[];// assumes new empty chat if no data was passed\nreturn dataCopy;});}function addNewGroup(groupObject,chatData,chatDepleted){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);dataCopy[groupObject._id]=groupObject;dataCopy[groupObject._id].chatData={};dataCopy[groupObject._id].chatDepleted=_objectSpread({},chatDepleted);return dataCopy;});groupObject.channels.text.forEach(function(channel){return addNewChat(groupObject._id,channel._id,chatData);});}function removeGroup(groupIdString){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);delete dataCopy[groupIdString];return dataCopy;});}function patchGroup(groupObject){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);var chatCopy=_objectSpread({},dataCopy[groupObject._id].chatData);var depletedCopy=_objectSpread({},dataCopy[groupObject._id].chatDepleted);dataCopy[groupObject._id]=groupObject;dataCopy[groupObject._id].chatData=chatCopy;dataCopy[groupObject._id].chatDepleted=depletedCopy;return dataCopy;});}function removeClusterLocally(deletionParams){var target=deletionParams.target,deleteCluster=deletionParams.deleteCluster,indexes=deletionParams.indexes;if(!deleteCluster&&!indexes){// throw new Error(\"invalid parameters\");\nconsole.error(\"invalid parameters\");return null;}if(deleteCluster){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);var stackCopy=_toConsumableArray(dataCopy[target.group].chatData[target.channel]);var filteredStack=stackCopy.filter(function(cluster){return cluster.clusterTimestamp!==target.clusterTimestamp;});dataCopy[target.group].chatData[target.channel]=filteredStack;return dataCopy;});}else if(indexes){setGroupData(function(prevData){var dataCopy=_objectSpread({},prevData);var stackCopy=_toConsumableArray(dataCopy[target.group].chatData[target.channel]);var indexModifier=0;var clusterIndex=stackCopy.findIndex(function(cluster){return cluster.clusterTimestamp===target.clusterTimestamp;});if(clusterIndex<0){// throw new Error(\"cluster not found\");\nconsole.error(\"cluster not found\");return null;}indexes.forEach(function(index){stackCopy[clusterIndex].content.splice(index-indexModifier,1);indexModifier++;});dataCopy[target.group].chatData[target.channel]=stackCopy;return dataCopy;});}}function getStatus(idString){var _peerData$idString;return((_peerData$idString=peerData[idString])===null||_peerData$idString===void 0?void 0:_peerData$idString.status)||\"offline\";}function mergePeers(partialData){setPeerData(function(prevData){return _objectSpread(_objectSpread({},prevData),partialData);});}function changeStatus(params){var target=params.target,change=params.change;var validStatuses=[\"online\",\"away\",\"busy\",\"offline\"];if(!validStatuses.includes(change)){// throw new Error(\"invalid status parameter\");\nconsole.error(\"invalid status parameters\");return null;}if(!target){// throw new Error(\"no id passed\");\nconsole.error(\"id required\");return null;}setPeerData(function(prevData){var dataCopy=_objectSpread({},prevData);if(!dataCopy[target])dataCopy[target]={status:\"offline\"};dataCopy[target].status=change;return dataCopy;});}function getLastInfo(groupId,channelId){var chatStack=groupData[groupId].chatData[channelId];var elapsed=chatStack.length>0?Date.now()-chatStack[chatStack.length-1].clusterTimestamp:0;var lastSender=chatStack.length>0?chatStack[chatStack.length-1].sender.username:null;var lastCluster=chatStack.length>0?chatStack[chatStack.length-1]:null;return{elapsed:elapsed,lastCluster:lastCluster,lastSender:lastSender};}var dataState={groupData:groupData,setGroupData:setGroupData,dataMounted:dataMounted,setDataMounted:setDataMounted,chatMounted:chatMounted,setChatMounted:setChatMounted,isLoggedIn:isLoggedIn,setIsLoggedIn:setIsLoggedIn,peerData:peerData,setPeerData:setPeerData,dataReady:dataReady,stateRestored:stateRestored,setStateRestored:setStateRestored,mountChat:mountChat,selectedGroup:selectedGroup,setSelectedGroup:setSelectedGroup,selectedChannel:selectedChannel,setSelectedChannel:setSelectedChannel,windowIsFocused:windowIsFocused,setWindowIsFocused:setWindowIsFocused,clearSelected:clearSelected,isAdmin:isAdmin,selectedChatIsDepleted:selectedChatIsDepleted,statusForced:statusForced,setStatusForced:setStatusForced,socketError:socketError,setSocketError:setSocketError,dataHelpers:{getChannelIndex:getChannelIndex,addNewGroup:addNewGroup,removeGroup:removeGroup,patchGroup:patchGroup,getLastInfo:getLastInfo,mergePeers:mergePeers,removeClusterLocally:removeClusterLocally,getUnread:getUnread,setUnread:setUnread},peerHelpers:{getStatus:getStatus,changeStatus:changeStatus}};return/*#__PURE__*/_jsx(DataContext.Provider,{value:dataState,children:props.children});}","map":{"version":3,"names":["useState","createContext","useEffect","useRef","useLocalFallback","DataContext","DataStateProvider","props","groupData","setGroupData","peerData","setPeerData","dataMounted","setDataMounted","chatMounted","setChatMounted","selectedGroup","setSelectedGroup","selectedChannel","setSelectedChannel","selectedChatIsDepleted","setSelectedChatIsDepleted","stateRestored","setStateRestored","dataReady","setDataReady","isLoggedIn","setIsLoggedIn","windowIsFocused","setWindowIsFocused","statusForced","setStatusForced","unreadState","setUnreadState","socketError","setSocketError","updateStored","groupDataRef","current","group","setUnread","channelId","_id","clear","channel","isDepleted","chatData","length","chatDepleted","window","addEventListener","getUnread","params","groupId","unreadCount","console","warn","channels","text","reduce","accumulator","add","prevState","stateCopy","isAdmin","administrators","some","admin","localStorage","userId","clearSelected","mountChat","chatObject","depletedObject","prevData","dataCopy","getChannelIndex","parentId","dataArray","result","findIndex","addNewChat","groupIdString","channelIdString","addNewGroup","groupObject","forEach","removeGroup","patchGroup","chatCopy","depletedCopy","removeClusterLocally","deletionParams","target","deleteCluster","indexes","error","stackCopy","filteredStack","filter","cluster","clusterTimestamp","indexModifier","clusterIndex","index","content","splice","getStatus","idString","status","mergePeers","partialData","changeStatus","change","validStatuses","includes","getLastInfo","chatStack","elapsed","Date","now","lastSender","sender","username","lastCluster","dataState","dataHelpers","peerHelpers","children"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/components/context/DataContext.js"],"sourcesContent":["import { useState, createContext, useEffect, useRef } from \"react\";\n\n// utility hooks\nimport useLocalFallback from \"../../utils/localFallback\";\n\nexport const DataContext = createContext(); // use this to access the values here\n\n// use this to wrap around components that needs to access the values here\nexport function DataStateProvider(props) {\n  const [groupData, setGroupData] = useState(null);\n  const [peerData, setPeerData] = useState({});\n\n  const [dataMounted, setDataMounted] = useState(false);\n  const [chatMounted, setChatMounted] = useState(false);\n\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [selectedChannel, setSelectedChannel] = useState(null);\n\n  const [selectedChatIsDepleted, setSelectedChatIsDepleted] = useState(true);\n  const [stateRestored, setStateRestored] = useState(false);\n  const [dataReady, setDataReady] = useState(false);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [windowIsFocused, setWindowIsFocused] = useState(true);\n  const [statusForced, setStatusForced] = useState(false);\n\n  const [unreadState, setUnreadState] = useState({});\n\n  const [socketError, setSocketError] = useState(null);\n\n  const { updateStored } = useLocalFallback();\n\n  // this ref is used to prevent stale closure in the helper functions below\n  const groupDataRef = useRef(groupData);\n  useEffect(() => {\n    groupDataRef.current = groupData;\n  }, [groupData]);\n\n  // backup selected context id on change\n  // clear unread on enter chat\n  useEffect(() => {\n    if (selectedGroup) updateStored.group(selectedGroup);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedGroup]);\n  useEffect(() => {\n    if (selectedChannel) {\n      setUnread({ channelId: selectedChannel._id, clear: true });\n      updateStored.channel(selectedChannel);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedChannel]);\n\n  // chatDepleted status updater\n  useEffect(() => {\n    if (!selectedGroup || !selectedChannel || !dataReady)\n      setSelectedChatIsDepleted(false);\n    else if (groupData[selectedGroup] !== selectedGroup) {\n      let isDepleted; // ! unstable\n      if (\n        groupData[selectedGroup._id].chatData[selectedChannel._id]?.length <\n          20 ||\n        groupData[selectedGroup._id].chatDepleted?.[selectedChannel._id]\n      ) {\n        isDepleted = true;\n      } else {\n        isDepleted = false;\n      }\n\n      setSelectedChatIsDepleted(isDepleted);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedChannel, groupData, dataReady]);\n\n  // todo change selected context if main grpData changes\n\n  // window is focused detection used for notification sounds\n  useEffect(() => {\n    window.addEventListener(\"focus\", () => setWindowIsFocused(true));\n    window.addEventListener(\"blur\", () => setWindowIsFocused(false));\n    return () => {\n      window.addEventListener(\"focus\", () => setWindowIsFocused(true));\n      window.addEventListener(\"blur\", () => setWindowIsFocused(false));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // set if everything is ready to show\n  useEffect(() => {\n    if (dataMounted && chatMounted && stateRestored) setDataReady(true);\n    else setDataReady(false);\n  }, [dataMounted, chatMounted, stateRestored]);\n\n  function getUnread(params) {\n    const { groupId, channelId } = params;\n    let unreadCount;\n\n    if (!groupId && !channelId) {\n      console.warn(\"invalid params\");\n      return null;\n    }\n\n    if (channelId) {\n      unreadCount = unreadState[channelId];\n    } else if (groupId) {\n      const channels = groupData[groupId].channels.text;\n      unreadCount = channels.reduce((accumulator, channel) => {\n        return accumulator + (unreadState[channel._id] ?? 0);\n      }, 0);\n    }\n\n    return unreadCount > 0 ? unreadCount : 0;\n  }\n\n  function setUnread(params) {\n    const { channelId, add, clear } = params;\n\n    setUnreadState((prevState) => {\n      const stateCopy = { ...prevState };\n\n      if (add) {\n        stateCopy[channelId] =\n          stateCopy?.[channelId] > 0 ? stateCopy[channelId] + 1 : 1;\n      } else if (clear) delete stateCopy[channelId];\n\n      return stateCopy;\n    });\n  }\n\n  function isAdmin() {\n    return selectedGroup?.administrators.some(\n      (admin) => admin._id === localStorage.userId\n    );\n  }\n\n  function clearSelected() {\n    setSelectedChannel(null);\n    setSelectedGroup(null);\n  }\n\n  function mountChat(chatObject, depletedObject) {\n    setGroupData((prevData) => {\n      const dataCopy = { ...prevData };\n\n      for (const groupId in chatObject) {\n        dataCopy[groupId].chatData = { ...chatObject[groupId] };\n      }\n\n      for (const groupId in depletedObject) {\n        dataCopy[groupId].chatDepleted = { ...depletedObject[groupId] };\n      }\n\n      return dataCopy;\n    });\n\n    setChatMounted(true);\n  }\n\n  function getChannelIndex(parentId, channelId) {\n    const dataArray = groupDataRef.current ?? groupData;\n    const result = dataArray[parentId].channels.text.findIndex(\n      (channel) => channel._id === channelId\n    );\n    return result;\n  }\n\n  function addNewChat(groupIdString, channelIdString, chatData) {\n    setGroupData((prevData) => {\n      const dataCopy = { ...prevData };\n\n      dataCopy[groupIdString].chatData[channelIdString] = chatData\n        ? chatData[groupIdString][channelIdString]\n        : []; // assumes new empty chat if no data was passed\n\n      return dataCopy;\n    });\n  }\n\n  function addNewGroup(groupObject, chatData, chatDepleted) {\n    setGroupData((prevData) => {\n      const dataCopy = { ...prevData };\n\n      dataCopy[groupObject._id] = groupObject;\n      dataCopy[groupObject._id].chatData = {};\n      dataCopy[groupObject._id].chatDepleted = {\n        ...chatDepleted,\n      };\n\n      return dataCopy;\n    });\n\n    groupObject.channels.text.forEach((channel) =>\n      addNewChat(groupObject._id, channel._id, chatData)\n    );\n  }\n\n  function removeGroup(groupIdString) {\n    setGroupData((prevData) => {\n      const dataCopy = { ...prevData };\n      delete dataCopy[groupIdString];\n      return dataCopy;\n    });\n  }\n\n  function patchGroup(groupObject) {\n    setGroupData((prevData) => {\n      const dataCopy = { ...prevData };\n      const chatCopy = { ...dataCopy[groupObject._id].chatData };\n      const depletedCopy = { ...dataCopy[groupObject._id].chatDepleted };\n\n      dataCopy[groupObject._id] = groupObject;\n      dataCopy[groupObject._id].chatData = chatCopy;\n      dataCopy[groupObject._id].chatDepleted = depletedCopy;\n\n      return dataCopy;\n    });\n  }\n\n  function removeClusterLocally(deletionParams) {\n    const { target, deleteCluster, indexes } = deletionParams;\n\n    if (!deleteCluster && !indexes) {\n      // throw new Error(\"invalid parameters\");\n      console.error(\"invalid parameters\");\n      return null;\n    }\n\n    if (deleteCluster) {\n      setGroupData((prevData) => {\n        const dataCopy = { ...prevData };\n        const stackCopy = [...dataCopy[target.group].chatData[target.channel]];\n\n        const filteredStack = stackCopy.filter(\n          (cluster) => cluster.clusterTimestamp !== target.clusterTimestamp\n        );\n\n        dataCopy[target.group].chatData[target.channel] = filteredStack;\n        return dataCopy;\n      });\n    } else if (indexes) {\n      setGroupData((prevData) => {\n        const dataCopy = { ...prevData };\n        const stackCopy = [...dataCopy[target.group].chatData[target.channel]];\n        let indexModifier = 0;\n\n        const clusterIndex = stackCopy.findIndex(\n          (cluster) => cluster.clusterTimestamp === target.clusterTimestamp\n        );\n\n        if (clusterIndex < 0) {\n          // throw new Error(\"cluster not found\");\n          console.error(\"cluster not found\");\n          return null;\n        }\n\n        indexes.forEach((index) => {\n          stackCopy[clusterIndex].content.splice(index - indexModifier, 1);\n          indexModifier++;\n        });\n\n        dataCopy[target.group].chatData[target.channel] = stackCopy;\n        return dataCopy;\n      });\n    }\n  }\n\n  function getStatus(idString) {\n    return peerData[idString]?.status || \"offline\";\n  }\n\n  function mergePeers(partialData) {\n    setPeerData((prevData) => {\n      return { ...prevData, ...partialData };\n    });\n  }\n\n  function changeStatus(params) {\n    const { target, change } = params;\n\n    const validStatuses = [\"online\", \"away\", \"busy\", \"offline\"];\n    if (!validStatuses.includes(change)) {\n      // throw new Error(\"invalid status parameter\");\n      console.error(\"invalid status parameters\");\n      return null;\n    }\n    if (!target) {\n      // throw new Error(\"no id passed\");\n      console.error(\"id required\");\n      return null;\n    }\n\n    setPeerData((prevData) => {\n      const dataCopy = { ...prevData };\n\n      if (!dataCopy[target]) dataCopy[target] = { status: \"offline\" };\n      dataCopy[target].status = change;\n\n      return dataCopy;\n    });\n  }\n\n  function getLastInfo(groupId, channelId) {\n    const chatStack = groupData[groupId].chatData[channelId];\n\n    const elapsed =\n      chatStack.length > 0\n        ? Date.now() - chatStack[chatStack.length - 1].clusterTimestamp\n        : 0;\n\n    const lastSender =\n      chatStack.length > 0\n        ? chatStack[chatStack.length - 1].sender.username\n        : null;\n\n    const lastCluster =\n      chatStack.length > 0 ? chatStack[chatStack.length - 1] : null;\n\n    return { elapsed, lastCluster, lastSender };\n  }\n\n  const dataState = {\n    groupData,\n    setGroupData,\n    dataMounted,\n    setDataMounted,\n    chatMounted,\n    setChatMounted,\n    isLoggedIn,\n    setIsLoggedIn,\n    peerData,\n    setPeerData,\n    dataReady,\n    stateRestored,\n    setStateRestored,\n    mountChat,\n    selectedGroup,\n    setSelectedGroup,\n    selectedChannel,\n    setSelectedChannel,\n    windowIsFocused,\n    setWindowIsFocused,\n    clearSelected,\n    isAdmin,\n    selectedChatIsDepleted,\n    statusForced,\n    setStatusForced,\n    socketError,\n    setSocketError,\n\n    dataHelpers: {\n      getChannelIndex,\n      addNewGroup,\n      removeGroup,\n      patchGroup,\n      getLastInfo,\n      mergePeers,\n      removeClusterLocally,\n      getUnread,\n      setUnread,\n    },\n\n    peerHelpers: {\n      getStatus,\n      changeStatus,\n    },\n  };\n\n  return (\n    <DataContext.Provider value={dataState}>\n      {props.children}\n    </DataContext.Provider>\n  );\n}\n"],"mappings":"2aAAA,OAASA,QAAQ,CAAEC,aAAa,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAElE;AACA,MAAOC,iBAAgB,KAAM,2BAA2B,CAAC,2CAEzD,MAAO,IAAMC,YAAW,cAAGJ,aAAa,EAAE,CAAE;AAE5C;AACA,MAAO,SAASK,kBAAiB,CAACC,KAAK,CAAE,CACvC,cAAkCP,QAAQ,CAAC,IAAI,CAAC,wCAAzCQ,SAAS,eAAEC,YAAY,eAC9B,eAAgCT,QAAQ,CAAC,CAAC,CAAC,CAAC,yCAArCU,QAAQ,eAAEC,WAAW,eAE5B,eAAsCX,QAAQ,CAAC,KAAK,CAAC,yCAA9CY,WAAW,eAAEC,cAAc,eAClC,eAAsCb,QAAQ,CAAC,KAAK,CAAC,yCAA9Cc,WAAW,eAAEC,cAAc,eAElC,eAA0Cf,QAAQ,CAAC,IAAI,CAAC,0CAAjDgB,aAAa,gBAAEC,gBAAgB,gBACtC,gBAA8CjB,QAAQ,CAAC,IAAI,CAAC,2CAArDkB,eAAe,gBAAEC,kBAAkB,gBAE1C,gBAA4DnB,QAAQ,CAAC,IAAI,CAAC,2CAAnEoB,sBAAsB,gBAAEC,yBAAyB,gBACxD,gBAA0CrB,QAAQ,CAAC,KAAK,CAAC,2CAAlDsB,aAAa,gBAAEC,gBAAgB,gBACtC,gBAAkCvB,QAAQ,CAAC,KAAK,CAAC,2CAA1CwB,SAAS,gBAAEC,YAAY,gBAE9B,gBAAoCzB,QAAQ,CAAC,KAAK,CAAC,2CAA5C0B,UAAU,gBAAEC,aAAa,gBAChC,gBAA8C3B,QAAQ,CAAC,IAAI,CAAC,2CAArD4B,eAAe,gBAAEC,kBAAkB,gBAC1C,gBAAwC7B,QAAQ,CAAC,KAAK,CAAC,2CAAhD8B,YAAY,gBAAEC,eAAe,gBAEpC,gBAAsC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,2CAA3CgC,WAAW,gBAAEC,cAAc,gBAElC,gBAAsCjC,QAAQ,CAAC,IAAI,CAAC,2CAA7CkC,WAAW,gBAAEC,cAAc,gBAElC,sBAAyB/B,gBAAgB,EAAE,CAAnCgC,YAAY,mBAAZA,YAAY,CAEpB;AACA,GAAMC,aAAY,CAAGlC,MAAM,CAACK,SAAS,CAAC,CACtCN,SAAS,CAAC,UAAM,CACdmC,YAAY,CAACC,OAAO,CAAG9B,SAAS,CAClC,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf;AACA;AACAN,SAAS,CAAC,UAAM,CACd,GAAIc,aAAa,CAAEoB,YAAY,CAACG,KAAK,CAACvB,aAAa,CAAC,CACpD;AACF,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CACnBd,SAAS,CAAC,UAAM,CACd,GAAIgB,eAAe,CAAE,CACnBsB,SAAS,CAAC,CAAEC,SAAS,CAAEvB,eAAe,CAACwB,GAAG,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAC1DP,YAAY,CAACQ,OAAO,CAAC1B,eAAe,CAAC,CACvC,CACA;AACF,CAAC,CAAE,CAACA,eAAe,CAAC,CAAC,CAErB;AACAhB,SAAS,CAAC,UAAM,CACd,GAAI,CAACc,aAAa,EAAI,CAACE,eAAe,EAAI,CAACM,SAAS,CAClDH,yBAAyB,CAAC,KAAK,CAAC,CAAC,IAC9B,IAAIb,SAAS,CAACQ,aAAa,CAAC,GAAKA,aAAa,CAAE,kDACnD,GAAI6B,WAAU,CAAE;AAChB,GACE,wBAAArC,SAAS,CAACQ,aAAa,CAAC0B,GAAG,CAAC,CAACI,QAAQ,CAAC5B,eAAe,CAACwB,GAAG,CAAC,gDAA1D,sBAA4DK,MAAM,EAChE,EAAE,0BACJvC,SAAS,CAACQ,aAAa,CAAC0B,GAAG,CAAC,CAACM,YAAY,2CAAzC,uBAA4C9B,eAAe,CAACwB,GAAG,CAAC,CAChE,CACAG,UAAU,CAAG,IAAI,CACnB,CAAC,IAAM,CACLA,UAAU,CAAG,KAAK,CACpB,CAEAxB,yBAAyB,CAACwB,UAAU,CAAC,CACvC,CACA;AACF,CAAC,CAAE,CAAC3B,eAAe,CAAEV,SAAS,CAAEgB,SAAS,CAAC,CAAC,CAE3C;AAEA;AACAtB,SAAS,CAAC,UAAM,CACd+C,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAE,iBAAMrB,mBAAkB,CAAC,IAAI,CAAC,GAAC,CAChEoB,MAAM,CAACC,gBAAgB,CAAC,MAAM,CAAE,iBAAMrB,mBAAkB,CAAC,KAAK,CAAC,GAAC,CAChE,MAAO,WAAM,CACXoB,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAE,iBAAMrB,mBAAkB,CAAC,IAAI,CAAC,GAAC,CAChEoB,MAAM,CAACC,gBAAgB,CAAC,MAAM,CAAE,iBAAMrB,mBAAkB,CAAC,KAAK,CAAC,GAAC,CAClE,CAAC,CACD;AACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA3B,SAAS,CAAC,UAAM,CACd,GAAIU,WAAW,EAAIE,WAAW,EAAIQ,aAAa,CAAEG,YAAY,CAAC,IAAI,CAAC,CAAC,IAC/DA,aAAY,CAAC,KAAK,CAAC,CAC1B,CAAC,CAAE,CAACb,WAAW,CAAEE,WAAW,CAAEQ,aAAa,CAAC,CAAC,CAE7C,QAAS6B,UAAS,CAACC,MAAM,CAAE,CACzB,GAAQC,QAAO,CAAgBD,MAAM,CAA7BC,OAAO,CAAEZ,SAAS,CAAKW,MAAM,CAApBX,SAAS,CAC1B,GAAIa,YAAW,CAEf,GAAI,CAACD,OAAO,EAAI,CAACZ,SAAS,CAAE,CAC1Bc,OAAO,CAACC,IAAI,CAAC,gBAAgB,CAAC,CAC9B,MAAO,KAAI,CACb,CAEA,GAAIf,SAAS,CAAE,CACba,WAAW,CAAGtB,WAAW,CAACS,SAAS,CAAC,CACtC,CAAC,IAAM,IAAIY,OAAO,CAAE,CAClB,GAAMI,SAAQ,CAAGjD,SAAS,CAAC6C,OAAO,CAAC,CAACI,QAAQ,CAACC,IAAI,CACjDJ,WAAW,CAAGG,QAAQ,CAACE,MAAM,CAAC,SAACC,WAAW,CAAEhB,OAAO,CAAK,2BACtD,MAAOgB,YAAW,yBAAI5B,WAAW,CAACY,OAAO,CAACF,GAAG,CAAC,+DAAI,CAAC,CAAC,CACtD,CAAC,CAAE,CAAC,CAAC,CACP,CAEA,MAAOY,YAAW,CAAG,CAAC,CAAGA,WAAW,CAAG,CAAC,CAC1C,CAEA,QAASd,UAAS,CAACY,MAAM,CAAE,CACzB,GAAQX,UAAS,CAAiBW,MAAM,CAAhCX,SAAS,CAAEoB,GAAG,CAAYT,MAAM,CAArBS,GAAG,CAAElB,KAAK,CAAKS,MAAM,CAAhBT,KAAK,CAE7BV,cAAc,CAAC,SAAC6B,SAAS,CAAK,CAC5B,GAAMC,UAAS,kBAAQD,SAAS,CAAE,CAElC,GAAID,GAAG,CAAE,CACPE,SAAS,CAACtB,SAAS,CAAC,CAClB,CAAAsB,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAGtB,SAAS,CAAC,EAAG,CAAC,CAAGsB,SAAS,CAACtB,SAAS,CAAC,CAAG,CAAC,CAAG,CAAC,CAC7D,CAAC,IAAM,IAAIE,KAAK,CAAE,MAAOoB,UAAS,CAACtB,SAAS,CAAC,CAE7C,MAAOsB,UAAS,CAClB,CAAC,CAAC,CACJ,CAEA,QAASC,QAAO,EAAG,CACjB,MAAOhD,cAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEiD,cAAc,CAACC,IAAI,CACvC,SAACC,KAAK,QAAKA,MAAK,CAACzB,GAAG,GAAK0B,YAAY,CAACC,MAAM,GAC7C,CACH,CAEA,QAASC,cAAa,EAAG,CACvBnD,kBAAkB,CAAC,IAAI,CAAC,CACxBF,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAEA,QAASsD,UAAS,CAACC,UAAU,CAAEC,cAAc,CAAE,CAC7ChE,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAEhC,IAAK,GAAMrB,QAAO,GAAImB,WAAU,CAAE,CAChCG,QAAQ,CAACtB,OAAO,CAAC,CAACP,QAAQ,kBAAQ0B,UAAU,CAACnB,OAAO,CAAC,CAAE,CACzD,CAEA,IAAK,GAAMA,SAAO,GAAIoB,eAAc,CAAE,CACpCE,QAAQ,CAACtB,QAAO,CAAC,CAACL,YAAY,kBAAQyB,cAAc,CAACpB,QAAO,CAAC,CAAE,CACjE,CAEA,MAAOsB,SAAQ,CACjB,CAAC,CAAC,CAEF5D,cAAc,CAAC,IAAI,CAAC,CACtB,CAEA,QAAS6D,gBAAe,CAACC,QAAQ,CAAEpC,SAAS,CAAE,2BAC5C,GAAMqC,UAAS,wBAAGzC,YAAY,CAACC,OAAO,+DAAI9B,SAAS,CACnD,GAAMuE,OAAM,CAAGD,SAAS,CAACD,QAAQ,CAAC,CAACpB,QAAQ,CAACC,IAAI,CAACsB,SAAS,CACxD,SAACpC,OAAO,QAAKA,QAAO,CAACF,GAAG,GAAKD,SAAS,GACvC,CACD,MAAOsC,OAAM,CACf,CAEA,QAASE,WAAU,CAACC,aAAa,CAAEC,eAAe,CAAErC,QAAQ,CAAE,CAC5DrC,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAEhCC,QAAQ,CAACO,aAAa,CAAC,CAACpC,QAAQ,CAACqC,eAAe,CAAC,CAAGrC,QAAQ,CACxDA,QAAQ,CAACoC,aAAa,CAAC,CAACC,eAAe,CAAC,CACxC,EAAE,CAAE;AAER,MAAOR,SAAQ,CACjB,CAAC,CAAC,CACJ,CAEA,QAASS,YAAW,CAACC,WAAW,CAAEvC,QAAQ,CAAEE,YAAY,CAAE,CACxDvC,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAEhCC,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAAG2C,WAAW,CACvCV,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAACI,QAAQ,CAAG,CAAC,CAAC,CACvC6B,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAACM,YAAY,kBACjCA,YAAY,CAChB,CAED,MAAO2B,SAAQ,CACjB,CAAC,CAAC,CAEFU,WAAW,CAAC5B,QAAQ,CAACC,IAAI,CAAC4B,OAAO,CAAC,SAAC1C,OAAO,QACxCqC,WAAU,CAACI,WAAW,CAAC3C,GAAG,CAAEE,OAAO,CAACF,GAAG,CAAEI,QAAQ,CAAC,GACnD,CACH,CAEA,QAASyC,YAAW,CAACL,aAAa,CAAE,CAClCzE,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAChC,MAAOC,SAAQ,CAACO,aAAa,CAAC,CAC9B,MAAOP,SAAQ,CACjB,CAAC,CAAC,CACJ,CAEA,QAASa,WAAU,CAACH,WAAW,CAAE,CAC/B5E,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAChC,GAAMe,SAAQ,kBAAQd,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAACI,QAAQ,CAAE,CAC1D,GAAM4C,aAAY,kBAAQf,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAACM,YAAY,CAAE,CAElE2B,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAAG2C,WAAW,CACvCV,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAACI,QAAQ,CAAG2C,QAAQ,CAC7Cd,QAAQ,CAACU,WAAW,CAAC3C,GAAG,CAAC,CAACM,YAAY,CAAG0C,YAAY,CAErD,MAAOf,SAAQ,CACjB,CAAC,CAAC,CACJ,CAEA,QAASgB,qBAAoB,CAACC,cAAc,CAAE,CAC5C,GAAQC,OAAM,CAA6BD,cAAc,CAAjDC,MAAM,CAAEC,aAAa,CAAcF,cAAc,CAAzCE,aAAa,CAAEC,OAAO,CAAKH,cAAc,CAA1BG,OAAO,CAEtC,GAAI,CAACD,aAAa,EAAI,CAACC,OAAO,CAAE,CAC9B;AACAxC,OAAO,CAACyC,KAAK,CAAC,oBAAoB,CAAC,CACnC,MAAO,KAAI,CACb,CAEA,GAAIF,aAAa,CAAE,CACjBrF,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAChC,GAAMuB,UAAS,oBAAOtB,QAAQ,CAACkB,MAAM,CAACtD,KAAK,CAAC,CAACO,QAAQ,CAAC+C,MAAM,CAACjD,OAAO,CAAC,CAAC,CAEtE,GAAMsD,cAAa,CAAGD,SAAS,CAACE,MAAM,CACpC,SAACC,OAAO,QAAKA,QAAO,CAACC,gBAAgB,GAAKR,MAAM,CAACQ,gBAAgB,GAClE,CAED1B,QAAQ,CAACkB,MAAM,CAACtD,KAAK,CAAC,CAACO,QAAQ,CAAC+C,MAAM,CAACjD,OAAO,CAAC,CAAGsD,aAAa,CAC/D,MAAOvB,SAAQ,CACjB,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIoB,OAAO,CAAE,CAClBtF,YAAY,CAAC,SAACiE,QAAQ,CAAK,CACzB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAChC,GAAMuB,UAAS,oBAAOtB,QAAQ,CAACkB,MAAM,CAACtD,KAAK,CAAC,CAACO,QAAQ,CAAC+C,MAAM,CAACjD,OAAO,CAAC,CAAC,CACtE,GAAI0D,cAAa,CAAG,CAAC,CAErB,GAAMC,aAAY,CAAGN,SAAS,CAACjB,SAAS,CACtC,SAACoB,OAAO,QAAKA,QAAO,CAACC,gBAAgB,GAAKR,MAAM,CAACQ,gBAAgB,GAClE,CAED,GAAIE,YAAY,CAAG,CAAC,CAAE,CACpB;AACAhD,OAAO,CAACyC,KAAK,CAAC,mBAAmB,CAAC,CAClC,MAAO,KAAI,CACb,CAEAD,OAAO,CAACT,OAAO,CAAC,SAACkB,KAAK,CAAK,CACzBP,SAAS,CAACM,YAAY,CAAC,CAACE,OAAO,CAACC,MAAM,CAACF,KAAK,CAAGF,aAAa,CAAE,CAAC,CAAC,CAChEA,aAAa,EAAE,CACjB,CAAC,CAAC,CAEF3B,QAAQ,CAACkB,MAAM,CAACtD,KAAK,CAAC,CAACO,QAAQ,CAAC+C,MAAM,CAACjD,OAAO,CAAC,CAAGqD,SAAS,CAC3D,MAAOtB,SAAQ,CACjB,CAAC,CAAC,CACJ,CACF,CAEA,QAASgC,UAAS,CAACC,QAAQ,CAAE,wBAC3B,MAAO,qBAAAlG,QAAQ,CAACkG,QAAQ,CAAC,6CAAlB,mBAAoBC,MAAM,GAAI,SAAS,CAChD,CAEA,QAASC,WAAU,CAACC,WAAW,CAAE,CAC/BpG,WAAW,CAAC,SAAC+D,QAAQ,CAAK,CACxB,sCAAYA,QAAQ,EAAKqC,WAAW,EACtC,CAAC,CAAC,CACJ,CAEA,QAASC,aAAY,CAAC5D,MAAM,CAAE,CAC5B,GAAQyC,OAAM,CAAazC,MAAM,CAAzByC,MAAM,CAAEoB,MAAM,CAAK7D,MAAM,CAAjB6D,MAAM,CAEtB,GAAMC,cAAa,CAAG,CAAC,QAAQ,CAAE,MAAM,CAAE,MAAM,CAAE,SAAS,CAAC,CAC3D,GAAI,CAACA,aAAa,CAACC,QAAQ,CAACF,MAAM,CAAC,CAAE,CACnC;AACA1D,OAAO,CAACyC,KAAK,CAAC,2BAA2B,CAAC,CAC1C,MAAO,KAAI,CACb,CACA,GAAI,CAACH,MAAM,CAAE,CACX;AACAtC,OAAO,CAACyC,KAAK,CAAC,aAAa,CAAC,CAC5B,MAAO,KAAI,CACb,CAEArF,WAAW,CAAC,SAAC+D,QAAQ,CAAK,CACxB,GAAMC,SAAQ,kBAAQD,QAAQ,CAAE,CAEhC,GAAI,CAACC,QAAQ,CAACkB,MAAM,CAAC,CAAElB,QAAQ,CAACkB,MAAM,CAAC,CAAG,CAAEgB,MAAM,CAAE,SAAU,CAAC,CAC/DlC,QAAQ,CAACkB,MAAM,CAAC,CAACgB,MAAM,CAAGI,MAAM,CAEhC,MAAOtC,SAAQ,CACjB,CAAC,CAAC,CACJ,CAEA,QAASyC,YAAW,CAAC/D,OAAO,CAAEZ,SAAS,CAAE,CACvC,GAAM4E,UAAS,CAAG7G,SAAS,CAAC6C,OAAO,CAAC,CAACP,QAAQ,CAACL,SAAS,CAAC,CAExD,GAAM6E,QAAO,CACXD,SAAS,CAACtE,MAAM,CAAG,CAAC,CAChBwE,IAAI,CAACC,GAAG,EAAE,CAAGH,SAAS,CAACA,SAAS,CAACtE,MAAM,CAAG,CAAC,CAAC,CAACsD,gBAAgB,CAC7D,CAAC,CAEP,GAAMoB,WAAU,CACdJ,SAAS,CAACtE,MAAM,CAAG,CAAC,CAChBsE,SAAS,CAACA,SAAS,CAACtE,MAAM,CAAG,CAAC,CAAC,CAAC2E,MAAM,CAACC,QAAQ,CAC/C,IAAI,CAEV,GAAMC,YAAW,CACfP,SAAS,CAACtE,MAAM,CAAG,CAAC,CAAGsE,SAAS,CAACA,SAAS,CAACtE,MAAM,CAAG,CAAC,CAAC,CAAG,IAAI,CAE/D,MAAO,CAAEuE,OAAO,CAAPA,OAAO,CAAEM,WAAW,CAAXA,WAAW,CAAEH,UAAU,CAAVA,UAAW,CAAC,CAC7C,CAEA,GAAMI,UAAS,CAAG,CAChBrH,SAAS,CAATA,SAAS,CACTC,YAAY,CAAZA,YAAY,CACZG,WAAW,CAAXA,WAAW,CACXC,cAAc,CAAdA,cAAc,CACdC,WAAW,CAAXA,WAAW,CACXC,cAAc,CAAdA,cAAc,CACdW,UAAU,CAAVA,UAAU,CACVC,aAAa,CAAbA,aAAa,CACbjB,QAAQ,CAARA,QAAQ,CACRC,WAAW,CAAXA,WAAW,CACXa,SAAS,CAATA,SAAS,CACTF,aAAa,CAAbA,aAAa,CACbC,gBAAgB,CAAhBA,gBAAgB,CAChBgD,SAAS,CAATA,SAAS,CACTvD,aAAa,CAAbA,aAAa,CACbC,gBAAgB,CAAhBA,gBAAgB,CAChBC,eAAe,CAAfA,eAAe,CACfC,kBAAkB,CAAlBA,kBAAkB,CAClBS,eAAe,CAAfA,eAAe,CACfC,kBAAkB,CAAlBA,kBAAkB,CAClByC,aAAa,CAAbA,aAAa,CACbN,OAAO,CAAPA,OAAO,CACP5C,sBAAsB,CAAtBA,sBAAsB,CACtBU,YAAY,CAAZA,YAAY,CACZC,eAAe,CAAfA,eAAe,CACfG,WAAW,CAAXA,WAAW,CACXC,cAAc,CAAdA,cAAc,CAEd2F,WAAW,CAAE,CACXlD,eAAe,CAAfA,eAAe,CACfQ,WAAW,CAAXA,WAAW,CACXG,WAAW,CAAXA,WAAW,CACXC,UAAU,CAAVA,UAAU,CACV4B,WAAW,CAAXA,WAAW,CACXN,UAAU,CAAVA,UAAU,CACVnB,oBAAoB,CAApBA,oBAAoB,CACpBxC,SAAS,CAATA,SAAS,CACTX,SAAS,CAATA,SACF,CAAC,CAEDuF,WAAW,CAAE,CACXpB,SAAS,CAATA,SAAS,CACTK,YAAY,CAAZA,YACF,CACF,CAAC,CAED,mBACE,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAEa,SAAU,UACpCtH,KAAK,CAACyH,QAAQ,EACM,CAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}