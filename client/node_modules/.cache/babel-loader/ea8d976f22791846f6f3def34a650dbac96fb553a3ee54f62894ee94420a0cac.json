{"ast":null,"code":"var _jsxFileName = \"/home/agreus/Documents/webdev/mercury-messenger/client/src/components/context/FlashContext.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FlashContext = /*#__PURE__*/createContext();\nexport function FlashStateProvider(props) {\n  _s();\n  const [flashMessages, setFlashMessages] = useState([]);\n  const [messageStack, setMessageStack] = useState([]);\n\n  // if flash messages are received, move them to the temp array context to be rendered and shown\n  useEffect(() => {\n    // if the local message stack is not the same as in context, move it\n    if (flashMessages.length > 0) {\n      if (flashMessages[0] !== messageStack[0] || flashMessages.length !== messageStack.length) {\n        setMessageStack(prevMessages => [...prevMessages, ...flashMessages]);\n        setFlashMessages([]);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flashMessages]);\n  function pushFlashMessage(messageArray) {\n    setFlashMessages(prevMessages => [...prevMessages, ...messageArray]);\n  }\n  function unmountFlash(position) {\n    const messagesHelper = [...messageStack]; //  spread the array to create a new array instead of saving the pointer\n    messagesHelper.splice(position, 1);\n    setMessageStack(messagesHelper);\n  }\n  const flashState = {\n    flashMessages,\n    setFlashMessages,\n    pushFlashMessage,\n    messageStack,\n    unmountFlash\n  };\n  return /*#__PURE__*/_jsxDEV(FlashContext.Provider, {\n    value: flashState,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashStateProvider, \"RVXXiyM32o99wuXGoEc05mb5PGM=\");\n_c = FlashStateProvider;\nvar _c;\n$RefreshReg$(_c, \"FlashStateProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","FlashContext","FlashStateProvider","props","flashMessages","setFlashMessages","messageStack","setMessageStack","length","prevMessages","pushFlashMessage","messageArray","unmountFlash","position","messagesHelper","splice","flashState","children"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/components/context/FlashContext.js"],"sourcesContent":["import { useState, useEffect, createContext } from \"react\";\nexport const FlashContext = createContext();\n\nexport function FlashStateProvider(props) {\n  const [flashMessages, setFlashMessages] = useState([]);\n  const [messageStack, setMessageStack] = useState([]);\n\n  // if flash messages are received, move them to the temp array context to be rendered and shown\n  useEffect(() => {\n    // if the local message stack is not the same as in context, move it\n    if (flashMessages.length > 0) {\n      if (\n        flashMessages[0] !== messageStack[0] ||\n        flashMessages.length !== messageStack.length\n      ) {\n        setMessageStack((prevMessages) => [...prevMessages, ...flashMessages]);\n        setFlashMessages([]);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flashMessages]);\n\n  function pushFlashMessage(messageArray) {\n    setFlashMessages((prevMessages) => [...prevMessages, ...messageArray]);\n  }\n\n  function unmountFlash(position) {\n    const messagesHelper = [...messageStack]; //  spread the array to create a new array instead of saving the pointer\n    messagesHelper.splice(position, 1);\n\n    setMessageStack(messagesHelper);\n  }\n\n  const flashState = {\n    flashMessages,\n    setFlashMessages,\n    pushFlashMessage,\n    messageStack,\n    unmountFlash,\n  };\n\n  return (\n    <FlashContext.Provider value={flashState}>\n      {props.children}\n    </FlashContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC;AAC3D,OAAO,MAAMC,YAAY,gBAAGD,aAAa,EAAE;AAE3C,OAAO,SAASE,kBAAkB,CAACC,KAAK,EAAE;EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAIK,aAAa,CAACI,MAAM,GAAG,CAAC,EAAE;MAC5B,IACEJ,aAAa,CAAC,CAAC,CAAC,KAAKE,YAAY,CAAC,CAAC,CAAC,IACpCF,aAAa,CAACI,MAAM,KAAKF,YAAY,CAACE,MAAM,EAC5C;QACAD,eAAe,CAAEE,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE,GAAGL,aAAa,CAAC,CAAC;QACtEC,gBAAgB,CAAC,EAAE,CAAC;MACtB;IACF;IACA;EACF,CAAC,EAAE,CAACD,aAAa,CAAC,CAAC;EAEnB,SAASM,gBAAgB,CAACC,YAAY,EAAE;IACtCN,gBAAgB,CAAEI,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE,GAAGE,YAAY,CAAC,CAAC;EACxE;EAEA,SAASC,YAAY,CAACC,QAAQ,EAAE;IAC9B,MAAMC,cAAc,GAAG,CAAC,GAAGR,YAAY,CAAC,CAAC,CAAC;IAC1CQ,cAAc,CAACC,MAAM,CAACF,QAAQ,EAAE,CAAC,CAAC;IAElCN,eAAe,CAACO,cAAc,CAAC;EACjC;EAEA,MAAME,UAAU,GAAG;IACjBZ,aAAa;IACbC,gBAAgB;IAChBK,gBAAgB;IAChBJ,YAAY;IACZM;EACF,CAAC;EAED,oBACE,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAEI,UAAW;IAAA,UACtCb,KAAK,CAACc;EAAQ;IAAA;IAAA;IAAA;EAAA,QACO;AAE5B;AAAC,GA3Cef,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}