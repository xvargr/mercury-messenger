{"ast":null,"code":"var _jsxFileName = \"/home/agreus/Documents/webdev/mercury-messenger/client/src/components/groups/UserBadge.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from \"../context/DataContext\";\nimport useSocket from \"../../utils/socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserBadge(props) {\n  _s();\n  const {\n    setSelectedGroup,\n    setSelectedChannel,\n    peerData,\n    peerHelpers\n  } = useContext(DataContext);\n  const {\n    forceStatusUpdate\n  } = useSocket();\n  const userStatus = useMemo(() => peerHelpers.getStatus(localStorage.userId),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [peerData]);\n  let statusIndicator;\n  let nextStatus;\n  switch (userStatus) {\n    case \"online\":\n      statusIndicator = \"border-2 bg-green-500\";\n      nextStatus = \"away\";\n      break;\n    case \"away\":\n      statusIndicator = \"border-2 bg-yellow-500\";\n      nextStatus = \"busy\";\n      break;\n    case \"busy\":\n      statusIndicator = \"border-2 bg-red-500\";\n      nextStatus = \"offline\";\n      break;\n    case \"offline\":\n      statusIndicator = \"border-2 bg-gray-600\";\n      nextStatus = \"online\";\n      break;\n    default:\n      break;\n  }\n  function StatusButton() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      title: `change status to ${nextStatus}`,\n      className: `w-2.5 h-2.5 group-hover:w-3 group-hover:h-3 ${statusIndicator} rounded-full border-solid border-4 box-content border-gray-800 absolute right-1.5 bottom-1.5 transition-all ease-in-out duration-200`,\n      onClick: e => forceStatusUpdate(nextStatus)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  if (props.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-700 h-16 w-16 m-2 mt-0 rounded-2xl inline-block transition-all animate-pulse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      className: \"relative group\",\n      to: \"/u\",\n      onClick: e => {\n        e.nativeEvent.stopImmediatePropagation(); // prevents nav to /user from clicking status button\n        setSelectedChannel(null);\n        setSelectedGroup(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: localStorage.userImageSmall,\n        className: \"bg-gray-700 h-16 w-16 m-2 mt-0 object-cover rounded-2xl inline-block group-hover:rounded-lg transition-all ease-in\",\n        alt: \"profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatusButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(UserBadge, \"CsK36QhnDy6vdkxntSWThVd2MDQ=\", false, function () {\n  return [useSocket];\n});\n_c = UserBadge;\nexport default UserBadge;\nvar _c;\n$RefreshReg$(_c, \"UserBadge\");","map":{"version":3,"names":["useMemo","useContext","Link","DataContext","useSocket","UserBadge","props","setSelectedGroup","setSelectedChannel","peerData","peerHelpers","forceStatusUpdate","userStatus","getStatus","localStorage","userId","statusIndicator","nextStatus","StatusButton","e","loading","nativeEvent","stopImmediatePropagation","userImageSmall"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/components/groups/UserBadge.js"],"sourcesContent":["import { useMemo, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { DataContext } from \"../context/DataContext\";\nimport useSocket from \"../../utils/socket\";\n\nfunction UserBadge(props) {\n  const { setSelectedGroup, setSelectedChannel, peerData, peerHelpers } =\n    useContext(DataContext);\n  const { forceStatusUpdate } = useSocket();\n\n  const userStatus = useMemo(\n    () => peerHelpers.getStatus(localStorage.userId),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [peerData]\n  );\n\n  let statusIndicator;\n  let nextStatus;\n  switch (userStatus) {\n    case \"online\":\n      statusIndicator = \"border-2 bg-green-500\";\n      nextStatus = \"away\";\n      break;\n\n    case \"away\":\n      statusIndicator = \"border-2 bg-yellow-500\";\n      nextStatus = \"busy\";\n      break;\n\n    case \"busy\":\n      statusIndicator = \"border-2 bg-red-500\";\n      nextStatus = \"offline\";\n      break;\n\n    case \"offline\":\n      statusIndicator = \"border-2 bg-gray-600\";\n      nextStatus = \"online\";\n      break;\n\n    default:\n      break;\n  }\n\n  function StatusButton() {\n    return (\n      <span\n        title={`change status to ${nextStatus}`}\n        className={`w-2.5 h-2.5 group-hover:w-3 group-hover:h-3 ${statusIndicator} rounded-full border-solid border-4 box-content border-gray-800 absolute right-1.5 bottom-1.5 transition-all ease-in-out duration-200`}\n        onClick={(e) => forceStatusUpdate(nextStatus)}\n      ></span>\n    );\n  }\n\n  if (props.loading) {\n    return (\n      <div className=\"bg-gray-700 h-16 w-16 m-2 mt-0 rounded-2xl inline-block transition-all animate-pulse\" />\n    );\n  } else {\n    return (\n      <Link\n        className=\"relative group\"\n        to=\"/u\"\n        onClick={(e) => {\n          e.nativeEvent.stopImmediatePropagation(); // prevents nav to /user from clicking status button\n          setSelectedChannel(null);\n          setSelectedGroup(null);\n        }}\n      >\n        <img\n          src={localStorage.userImageSmall}\n          className=\"bg-gray-700 h-16 w-16 m-2 mt-0 object-cover rounded-2xl inline-block group-hover:rounded-lg transition-all ease-in\"\n          alt=\"profile\"\n        />\n        <StatusButton />\n      </Link>\n    );\n  }\n}\n\nexport default UserBadge;\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,SAAS,MAAM,oBAAoB;AAAC;AAE3C,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EACxB,MAAM;IAAEC,gBAAgB;IAAEC,kBAAkB;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GACnET,UAAU,CAACE,WAAW,CAAC;EACzB,MAAM;IAAEQ;EAAkB,CAAC,GAAGP,SAAS,EAAE;EAEzC,MAAMQ,UAAU,GAAGZ,OAAO,CACxB,MAAMU,WAAW,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAAC;EAChD;EACA,CAACN,QAAQ,CAAC,CACX;EAED,IAAIO,eAAe;EACnB,IAAIC,UAAU;EACd,QAAQL,UAAU;IAChB,KAAK,QAAQ;MACXI,eAAe,GAAG,uBAAuB;MACzCC,UAAU,GAAG,MAAM;MACnB;IAEF,KAAK,MAAM;MACTD,eAAe,GAAG,wBAAwB;MAC1CC,UAAU,GAAG,MAAM;MACnB;IAEF,KAAK,MAAM;MACTD,eAAe,GAAG,qBAAqB;MACvCC,UAAU,GAAG,SAAS;MACtB;IAEF,KAAK,SAAS;MACZD,eAAe,GAAG,sBAAsB;MACxCC,UAAU,GAAG,QAAQ;MACrB;IAEF;MACE;EAAM;EAGV,SAASC,YAAY,GAAG;IACtB,oBACE;MACE,KAAK,EAAG,oBAAmBD,UAAW,EAAE;MACxC,SAAS,EAAG,+CAA8CD,eAAgB,uIAAuI;MACjN,OAAO,EAAGG,CAAC,IAAKR,iBAAiB,CAACM,UAAU;IAAE;MAAA;MAAA;MAAA;IAAA,QACxC;EAEZ;EAEA,IAAIX,KAAK,CAACc,OAAO,EAAE;IACjB,oBACE;MAAK,SAAS,EAAC;IAAsF;MAAA;MAAA;MAAA;IAAA,QAAG;EAE5G,CAAC,MAAM;IACL,oBACE,QAAC,IAAI;MACH,SAAS,EAAC,gBAAgB;MAC1B,EAAE,EAAC,IAAI;MACP,OAAO,EAAGD,CAAC,IAAK;QACdA,CAAC,CAACE,WAAW,CAACC,wBAAwB,EAAE,CAAC,CAAC;QAC1Cd,kBAAkB,CAAC,IAAI,CAAC;QACxBD,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAE;MAAA,wBAEF;QACE,GAAG,EAAEO,YAAY,CAACS,cAAe;QACjC,SAAS,EAAC,oHAAoH;QAC9H,GAAG,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QACb,eACF,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACX;EAEX;AACF;AAAC,GAxEQlB,SAAS;EAAA,QAGcD,SAAS;AAAA;AAAA,KAHhCC,SAAS;AA0ElB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}