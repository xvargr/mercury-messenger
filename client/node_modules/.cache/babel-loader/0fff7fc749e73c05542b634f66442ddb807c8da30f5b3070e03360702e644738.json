{"ast":null,"code":"var _jsxFileName = \"/home/agreus/Documents/webdev/mercury-messenger/client/src/pages/NewChannelPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// components\nimport NewChannelForm from \"../components/forms/NewChannelForm\";\n\n//context\nimport { DataContext } from \"../components/context/DataContext\";\nimport { FlashContext } from \"../components/context/FlashContext\";\n\n// utility hooks\nimport axiosInstance from \"../utils/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewChannelPage() {\n  _s();\n  const {\n    setGroupData,\n    selectedGroup,\n    setSelectedChannel,\n    isAdmin\n  } = useContext(DataContext);\n  const {\n    pushFlashMessage\n  } = useContext(FlashContext);\n  const [axiosErr, setAxiosErr] = useState({\n    message: null,\n    status: null\n  });\n  const {\n    userChannels\n  } = axiosInstance();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (selectedGroup) {\n      if (!isAdmin()) {\n        pushFlashMessage([{\n          message: \"Access denied\",\n          type: \"error\"\n        }]);\n        navigate(\"/\");\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedGroup]);\n  function newChannelHandler(channelObject) {\n    let newChannelData = new FormData();\n    newChannelData.append(\"group\", channelObject.group);\n    newChannelData.append(\"name\", channelObject.name);\n    newChannelData.append(\"type\", channelObject.type);\n    userChannels.new(newChannelData).then(res => {\n      setSelectedChannel(null);\n      setGroupData(prevData => {\n        const dataCopy = {\n          ...prevData\n        };\n        dataCopy[res.data.groupId].channels.text.push(res.data.channelData);\n        dataCopy[res.data.groupId].chatData[res.data.channelData._id] = [];\n        return dataCopy;\n      });\n      pushFlashMessage(res.data.messages);\n      navigate(`/g/${selectedGroup.name}`);\n    }).catch(err => {\n      setAxiosErr({\n        message: err.response.data.messages[0].message,\n        status: err.response.status\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(NewChannelForm, {\n    onNewChannel: newChannelHandler,\n    err: axiosErr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_s(NewChannelPage, \"9UJRWfTtxyyiv/VgNq5s7+weX8U=\", false, function () {\n  return [useNavigate];\n});\n_c = NewChannelPage;\nexport default NewChannelPage;\nvar _c;\n$RefreshReg$(_c, \"NewChannelPage\");","map":{"version":3,"names":["useContext","useState","useEffect","useNavigate","NewChannelForm","DataContext","FlashContext","axiosInstance","NewChannelPage","setGroupData","selectedGroup","setSelectedChannel","isAdmin","pushFlashMessage","axiosErr","setAxiosErr","message","status","userChannels","navigate","type","newChannelHandler","channelObject","newChannelData","FormData","append","group","name","new","then","res","prevData","dataCopy","data","groupId","channels","text","push","channelData","chatData","_id","messages","catch","err","response"],"sources":["/home/agreus/Documents/webdev/mercury-messenger/client/src/pages/NewChannelPage.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// components\nimport NewChannelForm from \"../components/forms/NewChannelForm\";\n\n//context\nimport { DataContext } from \"../components/context/DataContext\";\nimport { FlashContext } from \"../components/context/FlashContext\";\n\n// utility hooks\nimport axiosInstance from \"../utils/axios\";\n\nfunction NewChannelPage() {\n  const { setGroupData, selectedGroup, setSelectedChannel, isAdmin } =\n    useContext(DataContext);\n  const { pushFlashMessage } = useContext(FlashContext);\n  const [axiosErr, setAxiosErr] = useState({\n    message: null,\n    status: null,\n  });\n  const { userChannels } = axiosInstance();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (selectedGroup) {\n      if (!isAdmin()) {\n        pushFlashMessage([{ message: \"Access denied\", type: \"error\" }]);\n        navigate(\"/\");\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedGroup]);\n\n  function newChannelHandler(channelObject) {\n    let newChannelData = new FormData();\n    newChannelData.append(\"group\", channelObject.group);\n    newChannelData.append(\"name\", channelObject.name);\n    newChannelData.append(\"type\", channelObject.type);\n\n    userChannels\n      .new(newChannelData)\n      .then((res) => {\n        setSelectedChannel(null);\n\n        setGroupData((prevData) => {\n          const dataCopy = { ...prevData };\n\n          dataCopy[res.data.groupId].channels.text.push(res.data.channelData);\n          dataCopy[res.data.groupId].chatData[res.data.channelData._id] = [];\n          return dataCopy;\n        });\n\n        pushFlashMessage(res.data.messages);\n        navigate(`/g/${selectedGroup.name}`);\n      })\n      .catch((err) => {\n        setAxiosErr({\n          message: err.response.data.messages[0].message,\n          status: err.response.status,\n        });\n      });\n  }\n\n  return <NewChannelForm onNewChannel={newChannelHandler} err={axiosErr} />;\n}\n\nexport default NewChannelPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}